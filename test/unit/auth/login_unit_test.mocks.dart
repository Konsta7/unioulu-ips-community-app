// Mocks generated by Mockito 5.4.4 from annotations
// in community/test/unit/auth/login_unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:appwrite/appwrite.dart' as _i13;
import 'package:appwrite/enums.dart' as _i14;
import 'package:appwrite/models.dart' as _i5;
import 'package:appwrite/src/client.dart' as _i4;
import 'package:appwrite/src/enums.dart' as _i17;
import 'package:appwrite/src/response.dart' as _i6;
import 'package:appwrite/src/upload_progress.dart' as _i16;
import 'package:community/features/auth/domain/entities/user.dart' as _i3;
import 'package:community/features/auth/domain/repositories/auth_repository.dart'
    as _i2;
import 'package:community/features/auth/domain/usecases/authenticate_anonymous.dart'
    as _i12;
import 'package:community/features/auth/domain/usecases/login.dart' as _i9;
import 'package:community/features/auth/domain/usecases/logout.dart' as _i10;
import 'package:community/features/auth/domain/usecases/register.dart' as _i7;
import 'package:community/features/auth/domain/usecases/update_profile.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthRepository_0 extends _i1.SmartFake
    implements _i2.AuthRepository {
  _FakeAuthRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_2 extends _i1.SmartFake implements _i4.Client {
  _FakeClient_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_3 extends _i1.SmartFake implements _i5.User {
  _FakeUser_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdentityList_4 extends _i1.SmartFake implements _i5.IdentityList {
  _FakeIdentityList_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJwt_5 extends _i1.SmartFake implements _i5.Jwt {
  _FakeJwt_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogList_6 extends _i1.SmartFake implements _i5.LogList {
  _FakeLogList_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMfaType_7 extends _i1.SmartFake implements _i5.MfaType {
  _FakeMfaType_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMfaChallenge_8 extends _i1.SmartFake implements _i5.MfaChallenge {
  _FakeMfaChallenge_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSession_9 extends _i1.SmartFake implements _i5.Session {
  _FakeSession_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMfaFactors_10 extends _i1.SmartFake implements _i5.MfaFactors {
  _FakeMfaFactors_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMfaRecoveryCodes_11 extends _i1.SmartFake
    implements _i5.MfaRecoveryCodes {
  _FakeMfaRecoveryCodes_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePreferences_12 extends _i1.SmartFake implements _i5.Preferences {
  _FakePreferences_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeToken_13 extends _i1.SmartFake implements _i5.Token {
  _FakeToken_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSessionList_14 extends _i1.SmartFake implements _i5.SessionList {
  _FakeSessionList_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTarget_15 extends _i1.SmartFake implements _i5.Target {
  _FakeTarget_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_16<T> extends _i1.SmartFake implements _i6.Response<T> {
  _FakeResponse_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Register].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegister extends _i1.Mock implements _i7.Register {
  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i8.Future<_i3.User> execute(
    String? email,
    String? password,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [
            email,
            password,
            name,
          ],
        ),
        returnValue: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #execute,
            [
              email,
              password,
              name,
            ],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #execute,
            [
              email,
              password,
              name,
            ],
          ),
        )),
      ) as _i8.Future<_i3.User>);
}

/// A class which mocks [Login].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogin extends _i1.Mock implements _i9.Login {
  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i8.Future<_i3.User> execute(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [
            email,
            password,
          ],
        ),
        returnValue: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #execute,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #execute,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i8.Future<_i3.User>);
}

/// A class which mocks [Logout].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogout extends _i1.Mock implements _i10.Logout {
  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i8.Future<void> execute() => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [UpdateProfile].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateProfile extends _i1.Mock implements _i11.UpdateProfile {
  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i8.Future<_i3.User> execute(String? name) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [name],
        ),
        returnValue: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #execute,
            [name],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #execute,
            [name],
          ),
        )),
      ) as _i8.Future<_i3.User>);
}

/// A class which mocks [AuthenticateAnonymous].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticateAnonymous extends _i1.Mock
    implements _i12.AuthenticateAnonymous {
  @override
  _i2.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AuthRepository);

  @override
  _i8.Future<_i3.User> execute() => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i8.Future<_i3.User>);
}

/// A class which mocks [Account].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccount extends _i1.Mock implements _i13.Account {
  @override
  _i4.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_2(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeClient_2(
          this,
          Invocation.getter(#client),
        ),
      ) as _i4.Client);

  @override
  _i8.Future<_i5.User> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #get,
            [],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #get,
            [],
          ),
        )),
      ) as _i8.Future<_i5.User>);

  @override
  _i8.Future<_i5.User> create({
    required String? userId,
    required String? email,
    required String? password,
    String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
          {
            #userId: userId,
            #email: email,
            #password: password,
            #name: name,
          },
        ),
        returnValue: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #create,
            [],
            {
              #userId: userId,
              #email: email,
              #password: password,
              #name: name,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #create,
            [],
            {
              #userId: userId,
              #email: email,
              #password: password,
              #name: name,
            },
          ),
        )),
      ) as _i8.Future<_i5.User>);

  @override
  _i8.Future<_i5.User> updateEmail({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updateEmail,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updateEmail,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i8.Future<_i5.User>);

  @override
  _i8.Future<_i5.IdentityList> listIdentities({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listIdentities,
          [],
          {#queries: queries},
        ),
        returnValue: _i8.Future<_i5.IdentityList>.value(_FakeIdentityList_4(
          this,
          Invocation.method(
            #listIdentities,
            [],
            {#queries: queries},
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i5.IdentityList>.value(_FakeIdentityList_4(
          this,
          Invocation.method(
            #listIdentities,
            [],
            {#queries: queries},
          ),
        )),
      ) as _i8.Future<_i5.IdentityList>);

  @override
  _i8.Future<dynamic> deleteIdentity({required String? identityId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteIdentity,
          [],
          {#identityId: identityId},
        ),
        returnValue: _i8.Future<dynamic>.value(),
        returnValueForMissingStub: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<_i5.Jwt> createJWT() => (super.noSuchMethod(
        Invocation.method(
          #createJWT,
          [],
        ),
        returnValue: _i8.Future<_i5.Jwt>.value(_FakeJwt_5(
          this,
          Invocation.method(
            #createJWT,
            [],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Jwt>.value(_FakeJwt_5(
          this,
          Invocation.method(
            #createJWT,
            [],
          ),
        )),
      ) as _i8.Future<_i5.Jwt>);

  @override
  _i8.Future<_i5.LogList> listLogs({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listLogs,
          [],
          {#queries: queries},
        ),
        returnValue: _i8.Future<_i5.LogList>.value(_FakeLogList_6(
          this,
          Invocation.method(
            #listLogs,
            [],
            {#queries: queries},
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.LogList>.value(_FakeLogList_6(
          this,
          Invocation.method(
            #listLogs,
            [],
            {#queries: queries},
          ),
        )),
      ) as _i8.Future<_i5.LogList>);

  @override
  _i8.Future<_i5.User> updateMFA({required bool? mfa}) => (super.noSuchMethod(
        Invocation.method(
          #updateMFA,
          [],
          {#mfa: mfa},
        ),
        returnValue: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updateMFA,
            [],
            {#mfa: mfa},
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updateMFA,
            [],
            {#mfa: mfa},
          ),
        )),
      ) as _i8.Future<_i5.User>);

  @override
  _i8.Future<_i5.MfaType> createMfaAuthenticator(
          {required _i14.AuthenticatorType? type}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMfaAuthenticator,
          [],
          {#type: type},
        ),
        returnValue: _i8.Future<_i5.MfaType>.value(_FakeMfaType_7(
          this,
          Invocation.method(
            #createMfaAuthenticator,
            [],
            {#type: type},
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.MfaType>.value(_FakeMfaType_7(
          this,
          Invocation.method(
            #createMfaAuthenticator,
            [],
            {#type: type},
          ),
        )),
      ) as _i8.Future<_i5.MfaType>);

  @override
  _i8.Future<_i5.User> updateMfaAuthenticator({
    required _i14.AuthenticatorType? type,
    required String? otp,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMfaAuthenticator,
          [],
          {
            #type: type,
            #otp: otp,
          },
        ),
        returnValue: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updateMfaAuthenticator,
            [],
            {
              #type: type,
              #otp: otp,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updateMfaAuthenticator,
            [],
            {
              #type: type,
              #otp: otp,
            },
          ),
        )),
      ) as _i8.Future<_i5.User>);

  @override
  _i8.Future<dynamic> deleteMfaAuthenticator(
          {required _i14.AuthenticatorType? type}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMfaAuthenticator,
          [],
          {#type: type},
        ),
        returnValue: _i8.Future<dynamic>.value(),
        returnValueForMissingStub: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<_i5.MfaChallenge> createMfaChallenge(
          {required _i14.AuthenticationFactor? factor}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMfaChallenge,
          [],
          {#factor: factor},
        ),
        returnValue: _i8.Future<_i5.MfaChallenge>.value(_FakeMfaChallenge_8(
          this,
          Invocation.method(
            #createMfaChallenge,
            [],
            {#factor: factor},
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i5.MfaChallenge>.value(_FakeMfaChallenge_8(
          this,
          Invocation.method(
            #createMfaChallenge,
            [],
            {#factor: factor},
          ),
        )),
      ) as _i8.Future<_i5.MfaChallenge>);

  @override
  _i8.Future<_i5.Session> updateMfaChallenge({
    required String? challengeId,
    required String? otp,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMfaChallenge,
          [],
          {
            #challengeId: challengeId,
            #otp: otp,
          },
        ),
        returnValue: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #updateMfaChallenge,
            [],
            {
              #challengeId: challengeId,
              #otp: otp,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #updateMfaChallenge,
            [],
            {
              #challengeId: challengeId,
              #otp: otp,
            },
          ),
        )),
      ) as _i8.Future<_i5.Session>);

  @override
  _i8.Future<_i5.MfaFactors> listMfaFactors() => (super.noSuchMethod(
        Invocation.method(
          #listMfaFactors,
          [],
        ),
        returnValue: _i8.Future<_i5.MfaFactors>.value(_FakeMfaFactors_10(
          this,
          Invocation.method(
            #listMfaFactors,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i5.MfaFactors>.value(_FakeMfaFactors_10(
          this,
          Invocation.method(
            #listMfaFactors,
            [],
          ),
        )),
      ) as _i8.Future<_i5.MfaFactors>);

  @override
  _i8.Future<_i5.MfaRecoveryCodes> getMfaRecoveryCodes() => (super.noSuchMethod(
        Invocation.method(
          #getMfaRecoveryCodes,
          [],
        ),
        returnValue:
            _i8.Future<_i5.MfaRecoveryCodes>.value(_FakeMfaRecoveryCodes_11(
          this,
          Invocation.method(
            #getMfaRecoveryCodes,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i5.MfaRecoveryCodes>.value(_FakeMfaRecoveryCodes_11(
          this,
          Invocation.method(
            #getMfaRecoveryCodes,
            [],
          ),
        )),
      ) as _i8.Future<_i5.MfaRecoveryCodes>);

  @override
  _i8.Future<_i5.MfaRecoveryCodes> createMfaRecoveryCodes() =>
      (super.noSuchMethod(
        Invocation.method(
          #createMfaRecoveryCodes,
          [],
        ),
        returnValue:
            _i8.Future<_i5.MfaRecoveryCodes>.value(_FakeMfaRecoveryCodes_11(
          this,
          Invocation.method(
            #createMfaRecoveryCodes,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i5.MfaRecoveryCodes>.value(_FakeMfaRecoveryCodes_11(
          this,
          Invocation.method(
            #createMfaRecoveryCodes,
            [],
          ),
        )),
      ) as _i8.Future<_i5.MfaRecoveryCodes>);

  @override
  _i8.Future<_i5.MfaRecoveryCodes> updateMfaRecoveryCodes() =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMfaRecoveryCodes,
          [],
        ),
        returnValue:
            _i8.Future<_i5.MfaRecoveryCodes>.value(_FakeMfaRecoveryCodes_11(
          this,
          Invocation.method(
            #updateMfaRecoveryCodes,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i5.MfaRecoveryCodes>.value(_FakeMfaRecoveryCodes_11(
          this,
          Invocation.method(
            #updateMfaRecoveryCodes,
            [],
          ),
        )),
      ) as _i8.Future<_i5.MfaRecoveryCodes>);

  @override
  _i8.Future<_i5.User> updateName({required String? name}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateName,
          [],
          {#name: name},
        ),
        returnValue: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updateName,
            [],
            {#name: name},
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updateName,
            [],
            {#name: name},
          ),
        )),
      ) as _i8.Future<_i5.User>);

  @override
  _i8.Future<_i5.User> updatePassword({
    required String? password,
    String? oldPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [],
          {
            #password: password,
            #oldPassword: oldPassword,
          },
        ),
        returnValue: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updatePassword,
            [],
            {
              #password: password,
              #oldPassword: oldPassword,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updatePassword,
            [],
            {
              #password: password,
              #oldPassword: oldPassword,
            },
          ),
        )),
      ) as _i8.Future<_i5.User>);

  @override
  _i8.Future<_i5.User> updatePhone({
    required String? phone,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhone,
          [],
          {
            #phone: phone,
            #password: password,
          },
        ),
        returnValue: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updatePhone,
            [],
            {
              #phone: phone,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updatePhone,
            [],
            {
              #phone: phone,
              #password: password,
            },
          ),
        )),
      ) as _i8.Future<_i5.User>);

  @override
  _i8.Future<_i5.Preferences> getPrefs() => (super.noSuchMethod(
        Invocation.method(
          #getPrefs,
          [],
        ),
        returnValue: _i8.Future<_i5.Preferences>.value(_FakePreferences_12(
          this,
          Invocation.method(
            #getPrefs,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i5.Preferences>.value(_FakePreferences_12(
          this,
          Invocation.method(
            #getPrefs,
            [],
          ),
        )),
      ) as _i8.Future<_i5.Preferences>);

  @override
  _i8.Future<_i5.User> updatePrefs({required Map<dynamic, dynamic>? prefs}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePrefs,
          [],
          {#prefs: prefs},
        ),
        returnValue: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updatePrefs,
            [],
            {#prefs: prefs},
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updatePrefs,
            [],
            {#prefs: prefs},
          ),
        )),
      ) as _i8.Future<_i5.User>);

  @override
  _i8.Future<_i5.Token> createRecovery({
    required String? email,
    required String? url,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRecovery,
          [],
          {
            #email: email,
            #url: url,
          },
        ),
        returnValue: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createRecovery,
            [],
            {
              #email: email,
              #url: url,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createRecovery,
            [],
            {
              #email: email,
              #url: url,
            },
          ),
        )),
      ) as _i8.Future<_i5.Token>);

  @override
  _i8.Future<_i5.Token> updateRecovery({
    required String? userId,
    required String? secret,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRecovery,
          [],
          {
            #userId: userId,
            #secret: secret,
            #password: password,
          },
        ),
        returnValue: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #updateRecovery,
            [],
            {
              #userId: userId,
              #secret: secret,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #updateRecovery,
            [],
            {
              #userId: userId,
              #secret: secret,
              #password: password,
            },
          ),
        )),
      ) as _i8.Future<_i5.Token>);

  @override
  _i8.Future<_i5.SessionList> listSessions() => (super.noSuchMethod(
        Invocation.method(
          #listSessions,
          [],
        ),
        returnValue: _i8.Future<_i5.SessionList>.value(_FakeSessionList_14(
          this,
          Invocation.method(
            #listSessions,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i5.SessionList>.value(_FakeSessionList_14(
          this,
          Invocation.method(
            #listSessions,
            [],
          ),
        )),
      ) as _i8.Future<_i5.SessionList>);

  @override
  _i8.Future<dynamic> deleteSessions() => (super.noSuchMethod(
        Invocation.method(
          #deleteSessions,
          [],
        ),
        returnValue: _i8.Future<dynamic>.value(),
        returnValueForMissingStub: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<_i5.Session> createAnonymousSession() => (super.noSuchMethod(
        Invocation.method(
          #createAnonymousSession,
          [],
        ),
        returnValue: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #createAnonymousSession,
            [],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #createAnonymousSession,
            [],
          ),
        )),
      ) as _i8.Future<_i5.Session>);

  @override
  _i8.Future<_i5.Session> createEmailPasswordSession({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEmailPasswordSession,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #createEmailPasswordSession,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #createEmailPasswordSession,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i8.Future<_i5.Session>);

  @override
  _i8.Future<_i5.Session> updateMagicURLSession({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMagicURLSession,
          [],
          {
            #userId: userId,
            #secret: secret,
          },
        ),
        returnValue: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #updateMagicURLSession,
            [],
            {
              #userId: userId,
              #secret: secret,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #updateMagicURLSession,
            [],
            {
              #userId: userId,
              #secret: secret,
            },
          ),
        )),
      ) as _i8.Future<_i5.Session>);

  @override
  _i8.Future<dynamic> createOAuth2Session({
    required _i14.OAuthProvider? provider,
    String? success,
    String? failure,
    List<String>? scopes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOAuth2Session,
          [],
          {
            #provider: provider,
            #success: success,
            #failure: failure,
            #scopes: scopes,
          },
        ),
        returnValue: _i8.Future<dynamic>.value(),
        returnValueForMissingStub: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<_i5.Session> updatePhoneSession({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneSession,
          [],
          {
            #userId: userId,
            #secret: secret,
          },
        ),
        returnValue: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #updatePhoneSession,
            [],
            {
              #userId: userId,
              #secret: secret,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #updatePhoneSession,
            [],
            {
              #userId: userId,
              #secret: secret,
            },
          ),
        )),
      ) as _i8.Future<_i5.Session>);

  @override
  _i8.Future<_i5.Session> createSession({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSession,
          [],
          {
            #userId: userId,
            #secret: secret,
          },
        ),
        returnValue: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #createSession,
            [],
            {
              #userId: userId,
              #secret: secret,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #createSession,
            [],
            {
              #userId: userId,
              #secret: secret,
            },
          ),
        )),
      ) as _i8.Future<_i5.Session>);

  @override
  _i8.Future<_i5.Session> getSession({required String? sessionId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSession,
          [],
          {#sessionId: sessionId},
        ),
        returnValue: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #getSession,
            [],
            {#sessionId: sessionId},
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #getSession,
            [],
            {#sessionId: sessionId},
          ),
        )),
      ) as _i8.Future<_i5.Session>);

  @override
  _i8.Future<_i5.Session> updateSession({required String? sessionId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSession,
          [],
          {#sessionId: sessionId},
        ),
        returnValue: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #updateSession,
            [],
            {#sessionId: sessionId},
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Session>.value(_FakeSession_9(
          this,
          Invocation.method(
            #updateSession,
            [],
            {#sessionId: sessionId},
          ),
        )),
      ) as _i8.Future<_i5.Session>);

  @override
  _i8.Future<dynamic> deleteSession({required String? sessionId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSession,
          [],
          {#sessionId: sessionId},
        ),
        returnValue: _i8.Future<dynamic>.value(),
        returnValueForMissingStub: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<_i5.User> updateStatus() => (super.noSuchMethod(
        Invocation.method(
          #updateStatus,
          [],
        ),
        returnValue: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updateStatus,
            [],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updateStatus,
            [],
          ),
        )),
      ) as _i8.Future<_i5.User>);

  @override
  _i8.Future<_i5.Target> createPushTarget({
    required String? targetId,
    required String? identifier,
    String? providerId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPushTarget,
          [],
          {
            #targetId: targetId,
            #identifier: identifier,
            #providerId: providerId,
          },
        ),
        returnValue: _i8.Future<_i5.Target>.value(_FakeTarget_15(
          this,
          Invocation.method(
            #createPushTarget,
            [],
            {
              #targetId: targetId,
              #identifier: identifier,
              #providerId: providerId,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Target>.value(_FakeTarget_15(
          this,
          Invocation.method(
            #createPushTarget,
            [],
            {
              #targetId: targetId,
              #identifier: identifier,
              #providerId: providerId,
            },
          ),
        )),
      ) as _i8.Future<_i5.Target>);

  @override
  _i8.Future<_i5.Target> updatePushTarget({
    required String? targetId,
    required String? identifier,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePushTarget,
          [],
          {
            #targetId: targetId,
            #identifier: identifier,
          },
        ),
        returnValue: _i8.Future<_i5.Target>.value(_FakeTarget_15(
          this,
          Invocation.method(
            #updatePushTarget,
            [],
            {
              #targetId: targetId,
              #identifier: identifier,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Target>.value(_FakeTarget_15(
          this,
          Invocation.method(
            #updatePushTarget,
            [],
            {
              #targetId: targetId,
              #identifier: identifier,
            },
          ),
        )),
      ) as _i8.Future<_i5.Target>);

  @override
  _i8.Future<dynamic> deletePushTarget({required String? targetId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePushTarget,
          [],
          {#targetId: targetId},
        ),
        returnValue: _i8.Future<dynamic>.value(),
        returnValueForMissingStub: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<_i5.Token> createEmailToken({
    required String? userId,
    required String? email,
    bool? phrase,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEmailToken,
          [],
          {
            #userId: userId,
            #email: email,
            #phrase: phrase,
          },
        ),
        returnValue: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createEmailToken,
            [],
            {
              #userId: userId,
              #email: email,
              #phrase: phrase,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createEmailToken,
            [],
            {
              #userId: userId,
              #email: email,
              #phrase: phrase,
            },
          ),
        )),
      ) as _i8.Future<_i5.Token>);

  @override
  _i8.Future<_i5.Token> createMagicURLToken({
    required String? userId,
    required String? email,
    String? url,
    bool? phrase,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMagicURLToken,
          [],
          {
            #userId: userId,
            #email: email,
            #url: url,
            #phrase: phrase,
          },
        ),
        returnValue: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createMagicURLToken,
            [],
            {
              #userId: userId,
              #email: email,
              #url: url,
              #phrase: phrase,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createMagicURLToken,
            [],
            {
              #userId: userId,
              #email: email,
              #url: url,
              #phrase: phrase,
            },
          ),
        )),
      ) as _i8.Future<_i5.Token>);

  @override
  _i8.Future<dynamic> createOAuth2Token({
    required _i14.OAuthProvider? provider,
    String? success,
    String? failure,
    List<String>? scopes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOAuth2Token,
          [],
          {
            #provider: provider,
            #success: success,
            #failure: failure,
            #scopes: scopes,
          },
        ),
        returnValue: _i8.Future<dynamic>.value(),
        returnValueForMissingStub: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<_i5.Token> createPhoneToken({
    required String? userId,
    required String? phone,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPhoneToken,
          [],
          {
            #userId: userId,
            #phone: phone,
          },
        ),
        returnValue: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createPhoneToken,
            [],
            {
              #userId: userId,
              #phone: phone,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createPhoneToken,
            [],
            {
              #userId: userId,
              #phone: phone,
            },
          ),
        )),
      ) as _i8.Future<_i5.Token>);

  @override
  _i8.Future<_i5.Token> createVerification({required String? url}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createVerification,
          [],
          {#url: url},
        ),
        returnValue: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createVerification,
            [],
            {#url: url},
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createVerification,
            [],
            {#url: url},
          ),
        )),
      ) as _i8.Future<_i5.Token>);

  @override
  _i8.Future<_i5.Token> updateVerification({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateVerification,
          [],
          {
            #userId: userId,
            #secret: secret,
          },
        ),
        returnValue: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #updateVerification,
            [],
            {
              #userId: userId,
              #secret: secret,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #updateVerification,
            [],
            {
              #userId: userId,
              #secret: secret,
            },
          ),
        )),
      ) as _i8.Future<_i5.Token>);

  @override
  _i8.Future<_i5.Token> createPhoneVerification() => (super.noSuchMethod(
        Invocation.method(
          #createPhoneVerification,
          [],
        ),
        returnValue: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createPhoneVerification,
            [],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #createPhoneVerification,
            [],
          ),
        )),
      ) as _i8.Future<_i5.Token>);

  @override
  _i8.Future<_i5.Token> updatePhoneVerification({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneVerification,
          [],
          {
            #userId: userId,
            #secret: secret,
          },
        ),
        returnValue: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #updatePhoneVerification,
            [],
            {
              #userId: userId,
              #secret: secret,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Token>.value(_FakeToken_13(
          this,
          Invocation.method(
            #updatePhoneVerification,
            [],
            {
              #userId: userId,
              #secret: secret,
            },
          ),
        )),
      ) as _i8.Future<_i5.Token>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i4.Client {
  @override
  Map<String, String> get config => (super.noSuchMethod(
        Invocation.getter(#config),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  set config(Map<String, String>? _config) => super.noSuchMethod(
        Invocation.setter(
          #config,
          _config,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get endPoint => (super.noSuchMethod(
        Invocation.getter(#endPoint),
        returnValue: _i15.dummyValue<String>(
          this,
          Invocation.getter(#endPoint),
        ),
        returnValueForMissingStub: _i15.dummyValue<String>(
          this,
          Invocation.getter(#endPoint),
        ),
      ) as String);

  @override
  _i8.Future<dynamic> webAuth(
    Uri? url, {
    String? callbackUrlScheme,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #webAuth,
          [url],
          {#callbackUrlScheme: callbackUrlScheme},
        ),
        returnValue: _i8.Future<dynamic>.value(),
        returnValueForMissingStub: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<_i6.Response<dynamic>> chunkedUpload({
    required String? path,
    required Map<String, dynamic>? params,
    required String? paramName,
    required String? idParamName,
    required Map<String, String>? headers,
    dynamic Function(_i16.UploadProgress)? onProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #chunkedUpload,
          [],
          {
            #path: path,
            #params: params,
            #paramName: paramName,
            #idParamName: idParamName,
            #headers: headers,
            #onProgress: onProgress,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_16<dynamic>(
          this,
          Invocation.method(
            #chunkedUpload,
            [],
            {
              #path: path,
              #params: params,
              #paramName: paramName,
              #idParamName: idParamName,
              #headers: headers,
              #onProgress: onProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_16<dynamic>(
          this,
          Invocation.method(
            #chunkedUpload,
            [],
            {
              #path: path,
              #params: params,
              #paramName: paramName,
              #idParamName: idParamName,
              #headers: headers,
              #onProgress: onProgress,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);

  @override
  _i4.Client setSelfSigned({bool? status = true}) => (super.noSuchMethod(
        Invocation.method(
          #setSelfSigned,
          [],
          {#status: status},
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setSelfSigned,
            [],
            {#status: status},
          ),
        ),
        returnValueForMissingStub: _FakeClient_2(
          this,
          Invocation.method(
            #setSelfSigned,
            [],
            {#status: status},
          ),
        ),
      ) as _i4.Client);

  @override
  _i4.Client setEndpoint(String? endPoint) => (super.noSuchMethod(
        Invocation.method(
          #setEndpoint,
          [endPoint],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setEndpoint,
            [endPoint],
          ),
        ),
        returnValueForMissingStub: _FakeClient_2(
          this,
          Invocation.method(
            #setEndpoint,
            [endPoint],
          ),
        ),
      ) as _i4.Client);

  @override
  _i4.Client setEndPointRealtime(String? endPoint) => (super.noSuchMethod(
        Invocation.method(
          #setEndPointRealtime,
          [endPoint],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setEndPointRealtime,
            [endPoint],
          ),
        ),
        returnValueForMissingStub: _FakeClient_2(
          this,
          Invocation.method(
            #setEndPointRealtime,
            [endPoint],
          ),
        ),
      ) as _i4.Client);

  @override
  _i4.Client setProject(dynamic value) => (super.noSuchMethod(
        Invocation.method(
          #setProject,
          [value],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setProject,
            [value],
          ),
        ),
        returnValueForMissingStub: _FakeClient_2(
          this,
          Invocation.method(
            #setProject,
            [value],
          ),
        ),
      ) as _i4.Client);

  @override
  _i4.Client setJWT(dynamic value) => (super.noSuchMethod(
        Invocation.method(
          #setJWT,
          [value],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setJWT,
            [value],
          ),
        ),
        returnValueForMissingStub: _FakeClient_2(
          this,
          Invocation.method(
            #setJWT,
            [value],
          ),
        ),
      ) as _i4.Client);

  @override
  _i4.Client setLocale(dynamic value) => (super.noSuchMethod(
        Invocation.method(
          #setLocale,
          [value],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setLocale,
            [value],
          ),
        ),
        returnValueForMissingStub: _FakeClient_2(
          this,
          Invocation.method(
            #setLocale,
            [value],
          ),
        ),
      ) as _i4.Client);

  @override
  _i4.Client setSession(dynamic value) => (super.noSuchMethod(
        Invocation.method(
          #setSession,
          [value],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setSession,
            [value],
          ),
        ),
        returnValueForMissingStub: _FakeClient_2(
          this,
          Invocation.method(
            #setSession,
            [value],
          ),
        ),
      ) as _i4.Client);

  @override
  _i4.Client addHeader(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addHeader,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #addHeader,
            [
              key,
              value,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeClient_2(
          this,
          Invocation.method(
            #addHeader,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i4.Client);

  @override
  _i8.Future<String> ping() => (super.noSuchMethod(
        Invocation.method(
          #ping,
          [],
        ),
        returnValue: _i8.Future<String>.value(_i15.dummyValue<String>(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<String>.value(_i15.dummyValue<String>(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<_i6.Response<dynamic>> call(
    _i17.HttpMethod? method, {
    String? path = r'',
    Map<String, String>? headers = const {},
    Map<String, dynamic>? params = const {},
    _i17.ResponseType? responseType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [method],
          {
            #path: path,
            #headers: headers,
            #params: params,
            #responseType: responseType,
          },
        ),
        returnValue:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_16<dynamic>(
          this,
          Invocation.method(
            #call,
            [method],
            {
              #path: path,
              #headers: headers,
              #params: params,
              #responseType: responseType,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Response<dynamic>>.value(_FakeResponse_16<dynamic>(
          this,
          Invocation.method(
            #call,
            [method],
            {
              #path: path,
              #headers: headers,
              #params: params,
              #responseType: responseType,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response<dynamic>>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i2.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i3.User> register(
    String? email,
    String? password,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [
            email,
            password,
            name,
          ],
        ),
        returnValue: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #register,
            [
              email,
              password,
              name,
            ],
          ),
        )),
      ) as _i8.Future<_i3.User>);

  @override
  _i8.Future<_i3.User> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i8.Future<_i3.User>);

  @override
  _i8.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i3.User> authenticateAnonymous() => (super.noSuchMethod(
        Invocation.method(
          #authenticateAnonymous,
          [],
        ),
        returnValue: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #authenticateAnonymous,
            [],
          ),
        )),
      ) as _i8.Future<_i3.User>);

  @override
  _i8.Future<_i3.User> updateProfile(String? name) => (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [name],
        ),
        returnValue: _i8.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #updateProfile,
            [name],
          ),
        )),
      ) as _i8.Future<_i3.User>);

  @override
  _i8.Future<void> resetPassword(String? email) => (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [email],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String> getCurrentUserId() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserId,
          [],
        ),
        returnValue: _i8.Future<String>.value(_i15.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrentUserId,
            [],
          ),
        )),
      ) as _i8.Future<String>);
}
