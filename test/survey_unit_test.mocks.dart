// Mocks generated by Mockito 5.4.4 from annotations
// in community/test/survey_unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:community/features/auth/data/datasources/auth_remote_data_source.dart'
    as _i3;
import 'package:community/features/auth/data/repositories/auth_repository_impl.dart'
    as _i10;
import 'package:community/features/auth/domain/entities/user.dart' as _i5;
import 'package:community/features/surveys/data/survey.dart' as _i2;
import 'package:community/features/surveys/data/survey_question.dart' as _i8;
import 'package:community/features/surveys/data/survey_submission.dart' as _i9;
import 'package:community/features/surveys/service/survey_service.dart' as _i6;
import 'package:isar/isar.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSurvey_0 extends _i1.SmartFake implements _i2.Survey {
  _FakeSurvey_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthRemoteDataSource_1 extends _i1.SmartFake
    implements _i3.AuthRemoteDataSource {
  _FakeAuthRemoteDataSource_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIsar_2 extends _i1.SmartFake implements _i4.Isar {
  _FakeIsar_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_3 extends _i1.SmartFake implements _i5.User {
  _FakeUser_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SurveyService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurveyService extends _i1.Mock implements _i6.SurveyService {
  MockSurveyService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i8.SurveyQuestion>> getQuestionsForSurvey(
          String? surveyId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuestionsForSurvey,
          [surveyId],
        ),
        returnValue:
            _i7.Future<List<_i8.SurveyQuestion>>.value(<_i8.SurveyQuestion>[]),
      ) as _i7.Future<List<_i8.SurveyQuestion>>);

  @override
  _i7.Future<_i2.Survey> getSurveyForEvent(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSurveyForEvent,
          [eventId],
        ),
        returnValue: _i7.Future<_i2.Survey>.value(_FakeSurvey_0(
          this,
          Invocation.method(
            #getSurveyForEvent,
            [eventId],
          ),
        )),
      ) as _i7.Future<_i2.Survey>);

  @override
  _i7.Future<void> submitSurveyResponse(_i9.SurveySubmission? responseModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitSurveyResponse,
          [responseModel],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [AuthRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepositoryImpl extends _i1.Mock
    implements _i10.AuthRepositoryImpl {
  MockAuthRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AuthRemoteDataSource get remoteDataSource => (super.noSuchMethod(
        Invocation.getter(#remoteDataSource),
        returnValue: _FakeAuthRemoteDataSource_1(
          this,
          Invocation.getter(#remoteDataSource),
        ),
      ) as _i3.AuthRemoteDataSource);

  @override
  _i4.Isar get isar => (super.noSuchMethod(
        Invocation.getter(#isar),
        returnValue: _FakeIsar_2(
          this,
          Invocation.getter(#isar),
        ),
      ) as _i4.Isar);

  @override
  _i7.Future<_i5.User> register(
    String? email,
    String? password,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [
            email,
            password,
            name,
          ],
        ),
        returnValue: _i7.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #register,
            [
              email,
              password,
              name,
            ],
          ),
        )),
      ) as _i7.Future<_i5.User>);

  @override
  _i7.Future<_i5.User> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i7.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i7.Future<_i5.User>);

  @override
  _i7.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i5.User> authenticateAnonymous() => (super.noSuchMethod(
        Invocation.method(
          #authenticateAnonymous,
          [],
        ),
        returnValue: _i7.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #authenticateAnonymous,
            [],
          ),
        )),
      ) as _i7.Future<_i5.User>);

  @override
  _i7.Future<_i5.User> updateProfile(String? name) => (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [name],
        ),
        returnValue: _i7.Future<_i5.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #updateProfile,
            [name],
          ),
        )),
      ) as _i7.Future<_i5.User>);

  @override
  _i7.Future<void> resetPassword(String? email) => (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [email],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String> getCurrentUserId() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserId,
          [],
        ),
        returnValue: _i7.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrentUserId,
            [],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> getCurrentUserName() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserName,
          [],
        ),
        returnValue: _i7.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrentUserName,
            [],
          ),
        )),
      ) as _i7.Future<String>);
}
